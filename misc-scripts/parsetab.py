
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA DOLLAR LBRACKET LPAREN RBRACKET RPAREN TEXTfilestring : DOLLAR LBRACKET type LPAREN TEXT RPAREN RBRACKETvarstring : TEXTvarstring : filestringvarstring : variable varstringvarstring : varstring variablevariable : DOLLAR LBRACKET type COLON value RBRACKETvariable : DOLLAR LBRACKET type COLON value COMMA value RBRACKETvariable : DOLLAR LBRACKET type LPAREN value RPAREN RBRACKETtype : TEXTvalue : TEXTvalue : variablevalue : variable TEXTvalue : TEXT variable'
    
_lr_action_items = {'DOLLAR':([0,],[2,]),'$end':([1,9,],[0,-1,]),'LBRACKET':([2,],[3,]),'TEXT':([3,6,],[5,7,]),'LPAREN':([4,5,],[6,-9,]),'RPAREN':([7,],[8,]),'RBRACKET':([8,],[9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'filestring':([0,],[1,]),'type':([3,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> filestring","S'",1,None,None,None),
  ('filestring -> DOLLAR LBRACKET type LPAREN TEXT RPAREN RBRACKET','filestring',7,'p_filestring','testyacc.py',34),
  ('varstring -> TEXT','varstring',1,'p_varstring_text','testyacc.py',40),
  ('varstring -> filestring','varstring',1,'p_varstring_file','testyacc.py',44),
  ('varstring -> variable varstring','varstring',2,'p_varstring_variable_varstring','testyacc.py',48),
  ('varstring -> varstring variable','varstring',2,'p_varstring_varstring_variable','testyacc.py',52),
  ('variable -> DOLLAR LBRACKET type COLON value RBRACKET','variable',6,'p_variable','testyacc.py',56),
  ('variable -> DOLLAR LBRACKET type COLON value COMMA value RBRACKET','variable',8,'p_variable_def','testyacc.py',61),
  ('variable -> DOLLAR LBRACKET type LPAREN value RPAREN RBRACKET','variable',7,'p_variable_operator','testyacc.py',68),
  ('type -> TEXT','type',1,'p_type','testyacc.py',78),
  ('value -> TEXT','value',1,'p_value_text','testyacc.py',82),
  ('value -> variable','value',1,'p_value_variable','testyacc.py',86),
  ('value -> variable TEXT','value',2,'p_value_variable_text','testyacc.py',90),
  ('value -> TEXT variable','value',2,'p_value_text_variable','testyacc.py',94),
]
